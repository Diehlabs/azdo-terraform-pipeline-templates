parameters:
- name: tfe_token
  type: string

- name: tfe_hostname
  type: string

- name: tf_execution_mode
  type: string

- name: tfe_workspace
  type: string

- name: tf_run_dir
  type: string

- name: azdo_approval_environment
  type: string

- name: pre_steps
  type: object
  default: []

- name: post_steps
  type: object
  default: []

- name: apply_timeout
  type: string

- name: terraform_version
  type: string

- name: venafi_user
  type: string

- name: venafi_pass
  type: string

jobs:
  - deployment: Apply
    timeoutInMinutes: ${{ parameters.apply_timeout }}
    workspace:
      clean: resources
    environment:
      name: ${{ parameters.azdo_approval_environment }}
    #------------------------------------------------------------------------------------------------
    # Conditional job-scoped variables
    #------------------------------------------------------------------------------------------------
    variables:
      # If the user passes in a sub dir to use as the run dir, we need to append it to the root of the repo for use in the build agent.
      # When setting the working directory on a remote workspace and when performing the run remotely, we must use only the sub folder specified by the user.
      # Anywhere $(tf_run_dir) is used will be the full path. Otherwise ${{ parameters.tf_run_dir }} will be used to refer to the portion of the path specified by the user.
      - name: tf_run_dir
        ${{ if parameters.tf_run_dir }}:
          value: $(Build.SourcesDirectory)/${{ parameters.tf_run_dir }}
        ${{ else }}:
          value: $(Build.SourcesDirectory)
      # and then we have to keep track of the tf_run_dir the user specified, or set it to root "/" for setting this in the workspace
      - name: tf_ws_run_dir
        ${{ if parameters.tf_run_dir }}:
          value: ${{ parameters.tf_run_dir }}
        ${{ else }}:
          value: /
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self

          - ${{ if parameters.pre_steps }}:
              - ${{ parameters.pre_steps }}

          - template: steps-common.yml
            parameters:
              tfe_token: ${{ parameters.tfe_token }}
              tfe_hostname: ${{ parameters.tfe_hostname }}
              tf_run_dir: $(tf_run_dir)
              tf_ws_run_dir: $(tf_ws_run_dir)
              #remote_backend: $(remote_backend)
              workspace:  ${{ parameters.tfe_workspace }}
              tf_execution_mode: ${{ parameters.tf_execution_mode }}
              terraform_version: ${{ parameters.terraform_version }}
              venafi_user: ${{ parameters.venafi_user }}
              venafi_pass: ${{ parameters.venafi_pass }}

          - template: steps-tf-init.yml
            parameters:
              tf_run_dir: ${{ variables.tf_run_dir }}

          # Local runs
          # can use plan file out/in
          # can use env vars in build agent
          - ${{ if eq(parameters.tf_execution_mode, 'local') }}:
              - template: steps-terraform-apply-local.yml
                parameters:
                  tf_execution_mode: ${{ parameters.tf_execution_mode }}
                  tf_run_dir: ${{ variables.tf_run_dir }}
                  tfe_ws_name: ${{ parameters.tfe_workspace }}
                  #tf_run_result: dependencies.plan_${{ replace(parameters.tfe_workspace, '-', '_') }}.outputs['terraform_plan_local.TF_PLAN_RESULT']
                  #tf_run_result: ${{ replace('dependencies.plan_PLACEHOLDER.Plan.outputs["terraform_plan_local.TF_PLAN_RESULT"]', 'PLACEHOLDER', variables.stage_ws_name) }}

          # Remote runs
          # can't use plan file
          # can't use env vars in build agent, only in remote workspace
          - ${{ if eq(parameters.tf_execution_mode, 'remote') }}:
              - bash: |
                  # Using the CLI args for plan/apply throws an error on "init"
                  unset TF_CLI_ARGS
                  $(Agent.TempDirectory)/terraform apply -auto-approve
                workingDirectory: ${{ variables.tf_run_dir }}
                displayName: Terraform APPLY (remote)

          - ${{ if parameters.post_steps }}:
              - ${{ parameters.post_steps }}
